{"ast":null,"code":"var _jsxFileName = \"/Users/daviddoan/Documents/Phase-2/lectures/6_Additional_Hooks/project_showcase/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setUser,\n  previousUser,\n  user\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  function handleLogin(e) {\n    e.preventDefault();\n    fetch('http://localhost:4000/users').then(r => r.json()).then(data => {\n      const usersFound = data.filter(user => {\n        if (user.username === username && user.password === password) {\n          return user;\n        }\n        return false;\n      });\n      if (usersFound.length === 1) {\n        previousUser.current = user;\n        setUser(usersFound[0]);\n        navigate('/user');\n      } else {\n        alert(\"Not valid credentials\");\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleLogin(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"GhK8mQ+WGdLIBcgjjoSP0gl+EUM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","setUser","previousUser","user","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","fetch","then","r","json","data","usersFound","filter","length","current","alert","children","onSubmit","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/daviddoan/Documents/Phase-2/lectures/6_Additional_Hooks/project_showcase/src/components/Login.js"],"sourcesContent":["import {useState,useEffect} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nfunction Login({setUser,previousUser,user}){\n    const [username,setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const navigate = useNavigate()\n\n    function handleLogin(e){\n        e.preventDefault()\n        fetch('http://localhost:4000/users')\n        .then(r=>r.json())\n        .then(data=>{\n            const usersFound = data.filter((user)=>{\n                if(user.username===username && user.password===password){\n                    return user\n                }\n                return false\n            })\n            if(usersFound.length===1){\n                previousUser.current = user\n                setUser(usersFound[0])\n                navigate('/user')\n            }\n            else{\n                alert(\"Not valid credentials\")\n            }\n        })\n    }\n\n    return(\n        <>\n            <form onSubmit={(e)=>handleLogin(e)}>\n                <input placeholder=\"Username\" value={username} onChange={(e)=>setUsername(e.target.value)} />\n                <input placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)} />\n                <button type=\"submit\">Login</button>\n            </form>\n        </>\n    )\n}\nexport default Login"],"mappings":";;AAAA,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,KAAKA,CAAC;EAACC,OAAO;EAACC,YAAY;EAACC;AAAI,CAAC,EAAC;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,SAASe,WAAWA,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACjBF,IAAI,CAACG,IAAI,IAAE;MACR,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAM,CAAEhB,IAAI,IAAG;QACnC,IAAGA,IAAI,CAACE,QAAQ,KAAGA,QAAQ,IAAIF,IAAI,CAACI,QAAQ,KAAGA,QAAQ,EAAC;UACpD,OAAOJ,IAAI;QACf;QACA,OAAO,KAAK;MAChB,CAAC,CAAC;MACF,IAAGe,UAAU,CAACE,MAAM,KAAG,CAAC,EAAC;QACrBlB,YAAY,CAACmB,OAAO,GAAGlB,IAAI;QAC3BF,OAAO,CAACiB,UAAU,CAAC,CAAC,CAAC,CAAC;QACtBT,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,MACG;QACAa,KAAK,CAAC,uBAAuB,CAAC;MAClC;IACJ,CAAC,CAAC;EACN;EAEA,oBACIzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACI1B,OAAA;MAAM2B,QAAQ,EAAGb,CAAC,IAAGD,WAAW,CAACC,CAAC,CAAE;MAAAY,QAAA,gBAChC1B,OAAA;QAAO4B,WAAW,EAAC,UAAU;QAACC,KAAK,EAAErB,QAAS;QAACsB,QAAQ,EAAGhB,CAAC,IAAGL,WAAW,CAACK,CAAC,CAACiB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7FnC,OAAA;QAAO4B,WAAW,EAAC,UAAU;QAACC,KAAK,EAAEnB,QAAS;QAACoB,QAAQ,EAAGhB,CAAC,IAAGH,WAAW,CAACG,CAAC,CAACiB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7FnC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC,gBACT,CAAC;AAEX;AAAC5B,EAAA,CApCQJ,KAAK;EAAA,QAGOL,WAAW;AAAA;AAAAuC,EAAA,GAHvBlC,KAAK;AAqCd,eAAeA,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}